//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/InputActions/PlayerActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerActions"",
    ""maps"": [
        {
            ""name"": ""Player1Actions"",
            ""id"": ""f2d86476-80b7-45da-9f6e-7c5a3ec7a2fb"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""aab1ef94-469e-4403-b290-35c81a753c52"",
                    ""expectedControlType"": ""Stick"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MoveScope"",
                    ""type"": ""Value"",
                    ""id"": ""91c32843-9dd7-4529-b4b9-4e3e2b93340d"",
                    ""expectedControlType"": ""Stick"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SwitchWeapon"",
                    ""type"": ""Button"",
                    ""id"": ""71063ce3-672c-4559-965e-f6b7773f6c5b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""QuickAttack"",
                    ""type"": ""Button"",
                    ""id"": ""54bad6b6-bf3f-4cc4-bbfa-6b64b6d36326"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ImpactAttack"",
                    ""type"": ""Button"",
                    ""id"": ""bdf1c3f6-83cb-46e4-81c1-f4333a1fc31f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchPowerup"",
                    ""type"": ""Button"",
                    ""id"": ""147d9d06-c5c7-4ca6-8b72-767af403c5c9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""a56b6c53-d55b-44ed-b1d4-a119cad2beb2"",
                    ""path"": ""<XInputController>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3bc5e797-affc-4a8c-bb21-d3c24d1562cc"",
                    ""path"": ""<XInputController>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveScope"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""82f05dcc-332a-49f3-9900-ac9e67a5a61d"",
                    ""path"": ""<XInputController>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""24557ccf-669e-4bee-8253-331f53aede51"",
                    ""path"": ""<XInputController>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""QuickAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""90d691d7-53aa-48d6-a6f9-436dfef444d5"",
                    ""path"": ""<XInputController>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ImpactAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1d937001-54ad-481c-bcdb-15b166344e61"",
                    ""path"": ""<XInputController>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchPowerup"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Player1Actions1"",
            ""id"": ""09a9661c-58cd-4bd1-afa7-deec735934cc"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""5a2ada02-d2ae-48d1-8425-e2cfd3c0f181"",
                    ""expectedControlType"": ""Stick"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MoveScope"",
                    ""type"": ""Value"",
                    ""id"": ""2dd2eaa7-57c9-44c0-8d74-571906bece4f"",
                    ""expectedControlType"": ""Stick"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SwitchWeapon"",
                    ""type"": ""Button"",
                    ""id"": ""07dd242c-4022-4fdf-a5df-929795d9f20b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""QuickAttack"",
                    ""type"": ""Button"",
                    ""id"": ""59cca2da-9dfb-4704-807f-02fd03044a6d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ImpactAttack"",
                    ""type"": ""Button"",
                    ""id"": ""3df252b7-b165-4284-b91b-9bf8814e39c0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchPowerup"",
                    ""type"": ""Button"",
                    ""id"": ""fa43646c-0dee-48dd-ac63-2b1e7838e805"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""d4e421af-d51b-416d-aed4-70e7cb79223e"",
                    ""path"": ""<XInputController>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""816fb8f1-11a9-47b1-8bd0-fa5e0d782514"",
                    ""path"": ""<XInputController>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveScope"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0bad6d34-16f7-42c6-a196-d23213124f85"",
                    ""path"": ""<XInputController>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3d02e6ce-4627-4d00-a3be-5458f12105fe"",
                    ""path"": ""<XInputController>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""QuickAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8a1d57f0-a551-4f06-8d5d-83d8a22c39f0"",
                    ""path"": ""<XInputController>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ImpactAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2634c6f7-e683-4b53-8e94-2454e442130f"",
                    ""path"": ""<XInputController>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchPowerup"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""MenuActions"",
            ""id"": ""c074fc79-d600-427e-93d7-b23cfb7f9fd9"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""7e6464a2-cde6-4c8e-95a9-a53edf3234fe"",
                    ""expectedControlType"": ""Stick"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Click"",
                    ""type"": ""Button"",
                    ""id"": ""c45efed1-5ff4-463c-874e-c88b53469945"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""d1814334-8a07-4d7c-879a-355a7fee3d7b"",
                    ""path"": ""<XInputController>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3d6c4177-a4ec-4d61-b19c-26016d3c4c0d"",
                    ""path"": ""<XInputController>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f8609879-4ea0-47c2-967d-aaf8b4c52a88"",
                    ""path"": ""<XInputController>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""862e4064-b304-4c28-ad47-c64f76ddf184"",
                    ""path"": ""<XInputController>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b3310f6b-1948-465f-ae0f-9f5881819733"",
                    ""path"": ""<XInputController>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f29cff59-997e-44c3-8471-c4c59255a2e9"",
                    ""path"": ""<XInputController>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player1Actions
        m_Player1Actions = asset.FindActionMap("Player1Actions", throwIfNotFound: true);
        m_Player1Actions_Movement = m_Player1Actions.FindAction("Movement", throwIfNotFound: true);
        m_Player1Actions_MoveScope = m_Player1Actions.FindAction("MoveScope", throwIfNotFound: true);
        m_Player1Actions_SwitchWeapon = m_Player1Actions.FindAction("SwitchWeapon", throwIfNotFound: true);
        m_Player1Actions_QuickAttack = m_Player1Actions.FindAction("QuickAttack", throwIfNotFound: true);
        m_Player1Actions_ImpactAttack = m_Player1Actions.FindAction("ImpactAttack", throwIfNotFound: true);
        m_Player1Actions_SwitchPowerup = m_Player1Actions.FindAction("SwitchPowerup", throwIfNotFound: true);
        // Player1Actions1
        m_Player1Actions1 = asset.FindActionMap("Player1Actions1", throwIfNotFound: true);
        m_Player1Actions1_Movement = m_Player1Actions1.FindAction("Movement", throwIfNotFound: true);
        m_Player1Actions1_MoveScope = m_Player1Actions1.FindAction("MoveScope", throwIfNotFound: true);
        m_Player1Actions1_SwitchWeapon = m_Player1Actions1.FindAction("SwitchWeapon", throwIfNotFound: true);
        m_Player1Actions1_QuickAttack = m_Player1Actions1.FindAction("QuickAttack", throwIfNotFound: true);
        m_Player1Actions1_ImpactAttack = m_Player1Actions1.FindAction("ImpactAttack", throwIfNotFound: true);
        m_Player1Actions1_SwitchPowerup = m_Player1Actions1.FindAction("SwitchPowerup", throwIfNotFound: true);
        // MenuActions
        m_MenuActions = asset.FindActionMap("MenuActions", throwIfNotFound: true);
        m_MenuActions_Move = m_MenuActions.FindAction("Move", throwIfNotFound: true);
        m_MenuActions_Click = m_MenuActions.FindAction("Click", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player1Actions
    private readonly InputActionMap m_Player1Actions;
    private IPlayer1ActionsActions m_Player1ActionsActionsCallbackInterface;
    private readonly InputAction m_Player1Actions_Movement;
    private readonly InputAction m_Player1Actions_MoveScope;
    private readonly InputAction m_Player1Actions_SwitchWeapon;
    private readonly InputAction m_Player1Actions_QuickAttack;
    private readonly InputAction m_Player1Actions_ImpactAttack;
    private readonly InputAction m_Player1Actions_SwitchPowerup;
    public struct Player1ActionsActions
    {
        private @PlayerActions m_Wrapper;
        public Player1ActionsActions(@PlayerActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Player1Actions_Movement;
        public InputAction @MoveScope => m_Wrapper.m_Player1Actions_MoveScope;
        public InputAction @SwitchWeapon => m_Wrapper.m_Player1Actions_SwitchWeapon;
        public InputAction @QuickAttack => m_Wrapper.m_Player1Actions_QuickAttack;
        public InputAction @ImpactAttack => m_Wrapper.m_Player1Actions_ImpactAttack;
        public InputAction @SwitchPowerup => m_Wrapper.m_Player1Actions_SwitchPowerup;
        public InputActionMap Get() { return m_Wrapper.m_Player1Actions; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Player1ActionsActions set) { return set.Get(); }
        public void SetCallbacks(IPlayer1ActionsActions instance)
        {
            if (m_Wrapper.m_Player1ActionsActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_Player1ActionsActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_Player1ActionsActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_Player1ActionsActionsCallbackInterface.OnMovement;
                @MoveScope.started -= m_Wrapper.m_Player1ActionsActionsCallbackInterface.OnMoveScope;
                @MoveScope.performed -= m_Wrapper.m_Player1ActionsActionsCallbackInterface.OnMoveScope;
                @MoveScope.canceled -= m_Wrapper.m_Player1ActionsActionsCallbackInterface.OnMoveScope;
                @SwitchWeapon.started -= m_Wrapper.m_Player1ActionsActionsCallbackInterface.OnSwitchWeapon;
                @SwitchWeapon.performed -= m_Wrapper.m_Player1ActionsActionsCallbackInterface.OnSwitchWeapon;
                @SwitchWeapon.canceled -= m_Wrapper.m_Player1ActionsActionsCallbackInterface.OnSwitchWeapon;
                @QuickAttack.started -= m_Wrapper.m_Player1ActionsActionsCallbackInterface.OnQuickAttack;
                @QuickAttack.performed -= m_Wrapper.m_Player1ActionsActionsCallbackInterface.OnQuickAttack;
                @QuickAttack.canceled -= m_Wrapper.m_Player1ActionsActionsCallbackInterface.OnQuickAttack;
                @ImpactAttack.started -= m_Wrapper.m_Player1ActionsActionsCallbackInterface.OnImpactAttack;
                @ImpactAttack.performed -= m_Wrapper.m_Player1ActionsActionsCallbackInterface.OnImpactAttack;
                @ImpactAttack.canceled -= m_Wrapper.m_Player1ActionsActionsCallbackInterface.OnImpactAttack;
                @SwitchPowerup.started -= m_Wrapper.m_Player1ActionsActionsCallbackInterface.OnSwitchPowerup;
                @SwitchPowerup.performed -= m_Wrapper.m_Player1ActionsActionsCallbackInterface.OnSwitchPowerup;
                @SwitchPowerup.canceled -= m_Wrapper.m_Player1ActionsActionsCallbackInterface.OnSwitchPowerup;
            }
            m_Wrapper.m_Player1ActionsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @MoveScope.started += instance.OnMoveScope;
                @MoveScope.performed += instance.OnMoveScope;
                @MoveScope.canceled += instance.OnMoveScope;
                @SwitchWeapon.started += instance.OnSwitchWeapon;
                @SwitchWeapon.performed += instance.OnSwitchWeapon;
                @SwitchWeapon.canceled += instance.OnSwitchWeapon;
                @QuickAttack.started += instance.OnQuickAttack;
                @QuickAttack.performed += instance.OnQuickAttack;
                @QuickAttack.canceled += instance.OnQuickAttack;
                @ImpactAttack.started += instance.OnImpactAttack;
                @ImpactAttack.performed += instance.OnImpactAttack;
                @ImpactAttack.canceled += instance.OnImpactAttack;
                @SwitchPowerup.started += instance.OnSwitchPowerup;
                @SwitchPowerup.performed += instance.OnSwitchPowerup;
                @SwitchPowerup.canceled += instance.OnSwitchPowerup;
            }
        }
    }
    public Player1ActionsActions @Player1Actions => new Player1ActionsActions(this);

    // Player1Actions1
    private readonly InputActionMap m_Player1Actions1;
    private IPlayer1Actions1Actions m_Player1Actions1ActionsCallbackInterface;
    private readonly InputAction m_Player1Actions1_Movement;
    private readonly InputAction m_Player1Actions1_MoveScope;
    private readonly InputAction m_Player1Actions1_SwitchWeapon;
    private readonly InputAction m_Player1Actions1_QuickAttack;
    private readonly InputAction m_Player1Actions1_ImpactAttack;
    private readonly InputAction m_Player1Actions1_SwitchPowerup;
    public struct Player1Actions1Actions
    {
        private @PlayerActions m_Wrapper;
        public Player1Actions1Actions(@PlayerActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Player1Actions1_Movement;
        public InputAction @MoveScope => m_Wrapper.m_Player1Actions1_MoveScope;
        public InputAction @SwitchWeapon => m_Wrapper.m_Player1Actions1_SwitchWeapon;
        public InputAction @QuickAttack => m_Wrapper.m_Player1Actions1_QuickAttack;
        public InputAction @ImpactAttack => m_Wrapper.m_Player1Actions1_ImpactAttack;
        public InputAction @SwitchPowerup => m_Wrapper.m_Player1Actions1_SwitchPowerup;
        public InputActionMap Get() { return m_Wrapper.m_Player1Actions1; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Player1Actions1Actions set) { return set.Get(); }
        public void SetCallbacks(IPlayer1Actions1Actions instance)
        {
            if (m_Wrapper.m_Player1Actions1ActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_Player1Actions1ActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_Player1Actions1ActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_Player1Actions1ActionsCallbackInterface.OnMovement;
                @MoveScope.started -= m_Wrapper.m_Player1Actions1ActionsCallbackInterface.OnMoveScope;
                @MoveScope.performed -= m_Wrapper.m_Player1Actions1ActionsCallbackInterface.OnMoveScope;
                @MoveScope.canceled -= m_Wrapper.m_Player1Actions1ActionsCallbackInterface.OnMoveScope;
                @SwitchWeapon.started -= m_Wrapper.m_Player1Actions1ActionsCallbackInterface.OnSwitchWeapon;
                @SwitchWeapon.performed -= m_Wrapper.m_Player1Actions1ActionsCallbackInterface.OnSwitchWeapon;
                @SwitchWeapon.canceled -= m_Wrapper.m_Player1Actions1ActionsCallbackInterface.OnSwitchWeapon;
                @QuickAttack.started -= m_Wrapper.m_Player1Actions1ActionsCallbackInterface.OnQuickAttack;
                @QuickAttack.performed -= m_Wrapper.m_Player1Actions1ActionsCallbackInterface.OnQuickAttack;
                @QuickAttack.canceled -= m_Wrapper.m_Player1Actions1ActionsCallbackInterface.OnQuickAttack;
                @ImpactAttack.started -= m_Wrapper.m_Player1Actions1ActionsCallbackInterface.OnImpactAttack;
                @ImpactAttack.performed -= m_Wrapper.m_Player1Actions1ActionsCallbackInterface.OnImpactAttack;
                @ImpactAttack.canceled -= m_Wrapper.m_Player1Actions1ActionsCallbackInterface.OnImpactAttack;
                @SwitchPowerup.started -= m_Wrapper.m_Player1Actions1ActionsCallbackInterface.OnSwitchPowerup;
                @SwitchPowerup.performed -= m_Wrapper.m_Player1Actions1ActionsCallbackInterface.OnSwitchPowerup;
                @SwitchPowerup.canceled -= m_Wrapper.m_Player1Actions1ActionsCallbackInterface.OnSwitchPowerup;
            }
            m_Wrapper.m_Player1Actions1ActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @MoveScope.started += instance.OnMoveScope;
                @MoveScope.performed += instance.OnMoveScope;
                @MoveScope.canceled += instance.OnMoveScope;
                @SwitchWeapon.started += instance.OnSwitchWeapon;
                @SwitchWeapon.performed += instance.OnSwitchWeapon;
                @SwitchWeapon.canceled += instance.OnSwitchWeapon;
                @QuickAttack.started += instance.OnQuickAttack;
                @QuickAttack.performed += instance.OnQuickAttack;
                @QuickAttack.canceled += instance.OnQuickAttack;
                @ImpactAttack.started += instance.OnImpactAttack;
                @ImpactAttack.performed += instance.OnImpactAttack;
                @ImpactAttack.canceled += instance.OnImpactAttack;
                @SwitchPowerup.started += instance.OnSwitchPowerup;
                @SwitchPowerup.performed += instance.OnSwitchPowerup;
                @SwitchPowerup.canceled += instance.OnSwitchPowerup;
            }
        }
    }
    public Player1Actions1Actions @Player1Actions1 => new Player1Actions1Actions(this);

    // MenuActions
    private readonly InputActionMap m_MenuActions;
    private IMenuActionsActions m_MenuActionsActionsCallbackInterface;
    private readonly InputAction m_MenuActions_Move;
    private readonly InputAction m_MenuActions_Click;
    public struct MenuActionsActions
    {
        private @PlayerActions m_Wrapper;
        public MenuActionsActions(@PlayerActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_MenuActions_Move;
        public InputAction @Click => m_Wrapper.m_MenuActions_Click;
        public InputActionMap Get() { return m_Wrapper.m_MenuActions; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MenuActionsActions set) { return set.Get(); }
        public void SetCallbacks(IMenuActionsActions instance)
        {
            if (m_Wrapper.m_MenuActionsActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnMove;
                @Click.started -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnClick;
                @Click.performed -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnClick;
                @Click.canceled -= m_Wrapper.m_MenuActionsActionsCallbackInterface.OnClick;
            }
            m_Wrapper.m_MenuActionsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Click.started += instance.OnClick;
                @Click.performed += instance.OnClick;
                @Click.canceled += instance.OnClick;
            }
        }
    }
    public MenuActionsActions @MenuActions => new MenuActionsActions(this);
    public interface IPlayer1ActionsActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnMoveScope(InputAction.CallbackContext context);
        void OnSwitchWeapon(InputAction.CallbackContext context);
        void OnQuickAttack(InputAction.CallbackContext context);
        void OnImpactAttack(InputAction.CallbackContext context);
        void OnSwitchPowerup(InputAction.CallbackContext context);
    }
    public interface IPlayer1Actions1Actions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnMoveScope(InputAction.CallbackContext context);
        void OnSwitchWeapon(InputAction.CallbackContext context);
        void OnQuickAttack(InputAction.CallbackContext context);
        void OnImpactAttack(InputAction.CallbackContext context);
        void OnSwitchPowerup(InputAction.CallbackContext context);
    }
    public interface IMenuActionsActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnClick(InputAction.CallbackContext context);
    }
}
